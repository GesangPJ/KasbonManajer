// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserType {
  ADMIN
  KARYAWAN
}

enum Metode {
  CASH
  TRANSFER
}

enum StatusBayar {
  BELUM_LUNAS
  SUDAH_Lunas
}

model User {
  id             Int       @id @default(autoincrement())
  name           String?
  email          String    @unique
  password       String    // Add password field
  userType       UserType  @default(KARYAWAN)
  accounts       Account[]
  sessions       Session[]
  kasbonsAsUser  Kasbon[]  @relation("KasbonUser")
  kasbonsAsAdmin Kasbon[]  @relation("KasbonAdmin")
}

model Kasbon {
  id             Int         @id @default(autoincrement())
  userId         Int
  adminId        Int
  jumlah         Int
  metode         Metode      @default(CASH)
  status_r       String?
  status_b       StatusBayar @default(BELUM_LUNAS)
  keterangan     String?
  createdAt      DateTime    @default(now()) @db.DateTime(3)
  updatedAt      DateTime    @default(now()) @db.DateTime(3)

  user           User        @relation("KasbonUser", fields: [userId], references: [id])
  admin          User        @relation("KasbonAdmin", fields: [adminId], references: [id])
}

model Account {
  id                Int       @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user              User      @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique
  userId       Int
  expires      DateTime

  user         User      @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
}


